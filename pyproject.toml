[tool.poetry]
name = "eventsourcing-django"
version = "0.6"
description = "Python package for eventsourcing with Django."
authors = [
    "John Bywater <john.bywater@appropriatesoftware.net>",
]
license = "BSD 3-Clause"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Framework :: Django",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
]
readme = "README.md"
homepage = "https://eventsourcing.readthedocs.io/"
repository = "https://github.com/pyeventsourcing/eventsourcing-django"
include = ["eventsourcing_django/py.typed"]



[tool.poetry.dependencies]
python = "^3.9"
eventsourcing = { version = ">=9.3.5,<9.5" }
#eventsourcing = { path = "../eventsourcing/", extras = ["crypto"], develop = true }
#eventsourcing = { git = "https://github.com/pyeventsourcing/eventsourcing.git", branch = "main", extras = ["crypto"]}

# Django 4.2 support Python 3.8 -> 3.12
# Django 5.0 support Python 3.10 -> 3.12
# Django 5.1 and 5.2 support Python 3.10 -> 3.13
Django = [
    {version = ">=4.2,<5.0", python = ">=3.8,<3.10"},
    {version = ">=4.2,<5.2", python = ">=3.10,<3.12"},
    {version = ">=5.1,<6.0", python = ">=3.12,<4.0"},
]

[tool.poetry.group.dev.dependencies]
bandit = "*"
black = [
    {version = "<=24.8.0", python = "<3.9"},
    {version = "*", python = "<4.0"},
]
flake8 = "*"
flake8-broken-line = "*"
flake8-bugbear = "*"
flake8-coding = "*"
flake8-isort = "*"
flake8-tidy-imports = "*"
isort = "*"
mypy = "*"
pre-commit = "*"
pre-commit-hooks = "*"
psycopg = { version = "*", extras = ["binary", "pool"] }
psycopg2 = { version = "*", extras = ["binary"] }
pycryptodome = "~3.21"
pytest = "*"
pytest-cov = [
    {version = "<6.0", python = "<3.9"},
    {version = "*", python = "<4.0"},
]
pytest-django = "*"
#coverage = "<7.5.0"  # Because of PyCharm teamcity/pytest_plugin.py: TypeError: unhashable type: 'PythonFileReporter'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'
preview = true
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.pip-cache
  | \.poetry
  | \.venv
  | \.vscode
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.run]
branch = true
omit = []

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about missing debug-only code:
  "def __repr__",
  "if self.debug",
  # Don't complain about some magic methods:
  "def __str__",
  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain if non-runnable code isn't run:
  "if 0:",
  "if __name__ == .__main__.:",
  # Don't complain about empty realizations
  "pass",
  # Don't complain about abstract methods
  "@abc.abstractmethod"
]
ignore_errors = true
precision = 2

[tool.isort]
combine_as_imports = true
profile = "black"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
skip = ".eggs,.pip-cache,.poetry,venv,.venv,dist"
